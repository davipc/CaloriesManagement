<?xml version="1.0" encoding="UTF-8"?>

<!-- USEFUL INFORMATION -->
<!-- The persistence configuration can be spread out in multiple persistence.xml files if needed. 
	 If that is done, however, all persistence.xml files must be accessible from the Classpath. 
	 For that to happen, there can be only one version of the file directly available under META-INF, 
	 and all other versions of the file must be nested inside jar files - one per JAR file. 
-->

<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://java.sun.com/xml/ns/persistence file:/D:/Estudo/workspace/CaloriesManagementJPA/src/main/resources/persistence_2_0.xsd">

	<persistence-unit name="Calories-JPA" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		
		<non-jta-data-source>java:/PostgreSQLDS</non-jta-data-source>
		<class>com.toptal.calories.resources.entity.User</class>
		<class>com.toptal.calories.resources.entity.Role</class>
		<class>com.toptal.calories.resources.entity.Meal</class>
		
		<properties>
		
			<!-- Debug Configurations -->
			<!-- 
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="use_sql_comments" value="true" />
			 -->
			<!--  End of Debug Configuration -->
			
			<property name="hibernate.connection.driver_class" value="org.postgresql.Driver" />
			<property name="hibernate.connection.url" value="jdbc:postgresql://127.0.0.1:5432/toptal_calories" />
			<property name="hibernate.connection.username" value="toptal_calories" />
			<property name="hibernate.connection.password" value="password" />
						
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
			<property name="hibernate.connection.provider_class" value="org.hibernate.connection.C3P0ConnectionProvider" />
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.c3p0.max_size" value="50" />
			<property name="hibernate.c3p0.min_size" value="4" />
			<property name="hibernate.c3p0.acquire_increment" value="1" />
			<property name="hibernate.c3p0.idle_test_period" value="300" />
			<property name="hibernate.c3p0.max_statements" value="10" />
			<!-- When an idle connection is removed from the pool (in second). Hibernate default: 0, never expire. -->
			<property name="hibernate.c3p0.timeout" value="2000" />
			<!-- 
				The number of milliseconds a client calling getConnection() will wait   
				for a Connection, via check-in or a new connection acquired when the pool is exhausted. 
				Zero means wait indefinitely. Any positive value will cause a time-out with an SQLException 
				after the specified number of milliseconds is elapsed. 
			-->
			<property name="hibernate.c3p0.checkoutTimeout" value="2000" />
			<property name="hibernate.connection.release_mode" value="on_close" />
			<property name="hibernate.jdbc.batch_size" value="20" />
		</properties>
	</persistence-unit>

</persistence>
